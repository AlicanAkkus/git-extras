#!/bin/bash

usage() {
    echo "USAGE: git-find-repos [-h | --help] [-d | --dirty] <path>"
    exit 1
}

dirty=
path=$(pwd)

realargs="$@"
while [ $# -gt 0 ]; do
    case "$1" in
      -h | --help)
        usage
        ;;
      -d | --dirty)
        dirty=1
        ;;
      *)
        if [ -z "$2" ]; then
            path=$1
        fi
        break 2
        ;;
    esac
    shift
done
set -- $realargs

COUNTER=0
DIRTYCOUNTER=0

start_time=`date +%s`

if [ -n "$dirty" ]; then
    echo "Searching dirty git repositories under $path"
    while IFS= read -r -d $'\0' line; do
        COUNTER=$(( $COUNTER + 1 ))
        tmpPath=$(dirname ${line})

        cd ${tmpPath}
        gitStatus=$(git status -uall -s 2>/dev/null)
        gitUnpushedCommits=$(git --no-pager log --graph --branches --not --remotes --oneline 2>/dev/null)

        if [ -n "$gitStatus" ] || [ -n "$gitUnpushedCommits" ]; then
            DIRTYCOUNTER=$(( $DIRTYCOUNTER + 1 ))
            echo "[$DIRTYCOUNTER.] $tmpPath"
        fi
    done < <(find $path -type d -name ".git" -print0 2>/dev/null)
    echo "Found $DIRTYCOUNTER changed repos among $COUNTER git repositories under $path in $(expr `date +%s` - $start_time) seconds"
else
    echo "Searching all existing git repositories under $path"
    while IFS= read -r -d $'\0' line; do
        COUNTER=$(( $COUNTER + 1 ))
        echo "[$COUNTER.] ${line}"
    done < <(find $path -type d -name ".git" -print0 2>/dev/null)
    echo "Found $COUNTER git repositories under $path in $(expr `date +%s` - $start_time) seconds"
fi

